services:
  rest-proxy:
    image: 127.0.0.1:5000/rest-proxy:production
    build:
      context: .
      dockerfile: ./rest_proxy/Dockerfile
      target: production
    ports:
      - 8000:8000
    entrypoint: fastapi run main.py
    command: --host 0.0.0.0 --port 8000
    depends_on:
      - report_service
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1

  frontend-fake-portal:
    build: ./frontend/fake-unified-portal/.
    ports:
      - 81:3005
    command: "npm start"

  report_service:
    image: 127.0.0.1:5000/report-service:production
    build:
      context: .
      dockerfile: ./report_service/Dockerfile
      target: production
    ports:
      - 50051
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NAME=report_service
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1    

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1

volumes:
  redis_data:
